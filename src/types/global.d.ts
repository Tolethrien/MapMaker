import {
  StructureItem,
  TextureMeta,
  TileItem,
  View,
} from "@/engine/core/modules/assetsManager";
import { API } from "../preload/preload";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on

// whether you're running in development or production).
declare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string;
declare const MAIN_WINDOW_VITE_NAME: string;

declare global {
  interface Window {
    API: typeof API;
  }
  type AsyncStatus = { success: boolean; error: string };
  type Prettify<T> = {
    [K in keyof T]: T[K];
  } & {};
  type Position2D = { x: number; y: number };
  type Size2D = { w: number; h: number };
  type Box2D = { x: number; y: number; w: number; h: number };
  type HSLA = [number, number, number, number];

  interface ProjectConfig {
    projectPath: string;
    name: string;
    tileSize: Size2D;
    chunkSizeInTiles: Size2D;
    chunkSizeInPixels: Size2D;
  }

  interface TextureConfig {
    textures: TextureMeta[];
    views: Omit<View, "img" | "objects">[];
    tiles: TileLUTItem[];
    objects: StructureLUTItem[];
  }
}
